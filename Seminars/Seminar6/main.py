# определить простое число или нет рекурсией

# def natural_number(n, div = 2):
#     if n == 2:
#         return True
#     if n % div == 0:
#         return False
#     if n < div * div:
#         return True
#     return natural_number(n, div + 1)
#
# n = int(input("Enter the number N: "))
# print(natural_number(n))
#-----------------------------------------------------------------------------------------------------------------------
# палиндром или нет рекурсией

# input_word = input("Enter the text: ")
# def palindrom_check(input_word):
#     if len(input_word) < 1:
#         return True
#     else:
#         if input_word[0] == input_word[-1]:
#             return palindrom_check(input_word[1:-1])
#         else:
#             return False
#
# print(palindrom_check(input_word))
#-----------------------------------------------------------------------------------------------------------------------
# Задача No39. Общее обсуждение
# Даны два массива чисел. Требуется вывести те элементы первого массива
# (в том порядке, в каком они идут в первом массиве), которых нет во втором массиве.
# Пользователь вводит число N - количество элементов в первом массиве, затем N чисел - элементы массива.
# Затем число M - количество элементов во втором массиве. Затем элементы второго массива
# Ввод:
# 7
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1
# Вывод:
# 3 3 2 12
# (каждое число вводится с новой строки)

# import random
#
# n = int(input("Enter the first list lenght: "))
# m = int(input("Enter the second list lenght: "))
#
# some_list1 = []
# some_list2 = []
#
# for i in range(n):
#     some_list1.append(random.randint(1, 10))
# print(some_list1)
#
# for i in range(m):
#     some_list2.append(random.randint(1,10))
# print(some_list2)
#
# dif = [i for i in some_list1 if i not in some_list2]
# print(dif)
#-----------------------------------------------------------------------------------------------------------------------
# Задача №41. Решение в группах
# Дан массив, состоящий из целых чисел.
# Напишите программу, которая в данном массиве определит количество элементов,
# у которых два соседних и, при этом, оба соседних элемента меньше данного.
# Сначала вводится число N — количество элементов в массиве Далее записаны N чисел — элементы массива.
# Массив состоит из целых чисел.
# Ввод:               Ввод:
# 5                   5
# 1 2 3 4 5           1 5 1 5 1
# Вывод:              Вывод:
# 0                   2

# import random
#
# n = int(input("Enter the number N: "))
#
# some_list1 = []
#
# for i in range(n):
#     some_list1.append(random.randint(1, 5))
# print(some_list1)
#
# count = 0
#
# for i in range(1, len(some_list1) - 1):
#     if some_list1[i - 1] < some_list1[i] > some_list1[i + 1]:
#         count += 1
# print(count)
#-----------------------------------------------------------------------------------------------------------------------
# Задача №43.
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод:         Вывод:
# 1 2 3 2 3     2

# import random
#
# n = int(input("Enter the list lenght: "))
#
# some_list = []
# def pairs_of_elements(my_list):
#     for i in range(n):
#         my_list.append(random.randint(1, 3))
#     print(my_list)
#
#     my_list2 = [i for i in my_list if my_list.count(i) > 1]
#     my_set2 = set(my_list2)
#     print(len(my_set2))
#
# pairs_of_elements(some_list)
#-----------------------------------------------------------------------------------------------------------------------
# Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников.
# Теперь он использует их в качестве серверов "Пегого дудочника".
# Помогите владельцу фирмы отыскать все зараженные холодильники.
#
# Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр,
# и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы,
# главное наличие последовательности букв), то холодильник заражен и нужно вывести номер холодильника,
# нумерация начинается с единицы
#
# Формат входных данных
# В первой строке подаётся число
# n
# n – количество холодильников. В последующих
# n
# n строках вводятся строки, содержащие латинские строчные буквы и цифры, в каждой строке от
# 5
# 5 до
# 100
# 100 символов.
#
# Формат выходных данных
# Программа должна вывести номера зараженных холодильников через пробел. Если таких холодильников нет, ничего выводить не нужно.
#
# Sample Input 1:
# 6
# 222anton456
# a1n1t1o1n1
# 0000a0000n00t00000o000000n
# gylfole
# richard
# ant0n
# Sample Output 1:
# 1 2 3
# Sample Input 2:
# 9
# osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
# anton
# aoooooooooontooooo
# elelelelelelelelelel
# ntoneeee
# tonee
# 253235235a5323352n25235352t253523523235oo235523523523n
# antoooooooooooooooooooooooooooooooooooooooooooooooooooon
# unton
# Sample Output 2:
# 1 2 7 8c

n = int(input("Введите количество холодильников: "))

for i in range(n):
    i = input(f"Холодильник {i + 1}: ")

    for j in range(i):





